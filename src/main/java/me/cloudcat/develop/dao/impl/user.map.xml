<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="me.cloudcat.develop.dao.UserDao">

    <resultMap type="User" id="userMap" autoMapping="true">
        <collection property="roles" ofType="Role">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
        </collection>
    </resultMap>

    <sql id="basic_header">
        SELECT u.*
        FROM tbl_user u
    </sql>

    <sql id="detail_header">
        SELECT u.*,r.id role_id,r.name role_name
        FROM tbl_user u
        LEFT JOIN tbl_user_role_rel rel ON rel.user_id = u.id
        LEFT JOIN tbl_role r on rel.role_id = r.id
    </sql>

    <select id="getBasic" resultMap="userMap">
        <include refid="basic_header"/>
        <where>
            id = #{id}
        </where>
    </select>

    <select id="findOne" resultMap="userMap">
        <include refid="detail_header"/>
        <where>
            id = #{id}
        </where>
    </select>

    <select id="findByCondition" resultMap="userMap">
        <include refid="detail_header"/>
        <where>
            <if test="e.email!=null}">
                AND u.email = #{e.email}
            </if>
            <if test="e.username!=null}">
                AND u.email = #{e.username}
            </if>
            <if test="e.status!=null}">
                AND u.status = #{e.status}
            </if>
        </where>
    </select>

    <select id="findByUsernameOrEmail" resultMap="userMap">
        <include refid="detail_header"/>
        <where>
            username = #{value}
            OR
            email = #{value}
        </where>
    </select>

    <select id="findAll" resultMap="userMap">
        <include refid="detail_header"/>
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="e.id">
        insert into tbl_user(username, email, password, status)
        VALUES(#{e.username}, #{e.email}, #{e.password}, #{e.status})
    </insert>

    <delete id="delete">
        DELETE FROM tbl_user
        WHERE id = #{id}
    </delete>

    <update id="updateLastLoginTime">
        UPDATE tbl_user
        SET last_login_time = now()
        WHERE id = #{id}
    </update>

</mapper>